1.一般的情况下，不管是VPS还是其他的基于Linux的服务器，必须搭建一个Web Server监听80端口(http默认端口)，而Tornado服务进程监听在808*内部端口（可以启动多个进程）。由于Nginx是一个轻量、快速、安全的Server，一般选择Nginx作为反向代理，监听80端口并转发请求到后端的其他业务处理Server，比如Tornado。当将图片等一些静态资源缓存在前端的Nginx，可以节约内存以及CPU资源
2.为什么Tornado需要Nginx做一层反向代理？大概是这样的。Tornado为单线程的Web服务器，一个Req如果阻塞了IO，进程挂起，无法接受新的Req；可以通过多进程在一定程度上改善IO被阻塞的情况，但是多进程本来就极其消耗资源。而一般会阻塞IO大文件，大多数都是静态文件，所以有了在前面挂一层Nginx来缓存静态文件的思路，原始初衷是为了避免Tornado产生IO阻塞。
3.实现Tornado的反向代理，主要通过Nginx的配置文件选项完成，下面针对配置了一个worker的Nginx反向代理，对相应的配置文件进行说明。关于/logs/nginx.pid文件，在Nginx实例启动时，会将相应进程的pid在该文件进行记录，所以reload重启时，直接读取该文件中的进程pid，进行重启。因此killall之后，没法重启。